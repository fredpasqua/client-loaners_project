[{"/Users/fredpasqua/Desktop/client-loaners_project/src/index.js":"1","/Users/fredpasqua/Desktop/client-loaners_project/src/App.js":"2","/Users/fredpasqua/Desktop/client-loaners_project/src/reportWebVitals.js":"3","/Users/fredpasqua/Desktop/client-loaners_project/src/instrumentList.js":"4","/Users/fredpasqua/Desktop/client-loaners_project/src/AddLoaner.js":"5","/Users/fredpasqua/Desktop/client-loaners_project/src/select.js":"6","/Users/fredpasqua/Desktop/client-loaners_project/src/loginView.jsx":"7","/Users/fredpasqua/Desktop/client-loaners_project/src/registration-view.js":"8"},{"size":535,"mtime":1673811716071,"results":"9","hashOfConfig":"10"},{"size":233,"mtime":1674447049162,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1673810299579,"results":"12","hashOfConfig":"10"},{"size":10964,"mtime":1675015617528,"results":"13","hashOfConfig":"10"},{"size":3813,"mtime":1674512487792,"results":"14","hashOfConfig":"10"},{"size":1072,"mtime":1674436173172,"results":"15","hashOfConfig":"10"},{"size":4038,"mtime":1674739411525,"results":"16","hashOfConfig":"10"},{"size":4448,"mtime":1675014542504,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"14zz7g9",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"21"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"21"},"/Users/fredpasqua/Desktop/client-loaners_project/src/index.js",[],[],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/App.js",[],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/reportWebVitals.js",[],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/instrumentList.js",["45","46"],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/AddLoaner.js",[],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/select.js",[],[],"/Users/fredpasqua/Desktop/client-loaners_project/src/loginView.jsx",["47"],[],"import React, { useState } from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { Card, Container, CardGroup, Col, Row } from \"react-bootstrap\";\nimport \"./login-view.css\";\nimport axios from \"axios\";\nimport horntrax from \"./Images/horntrax-ph-logo.jpg\";\nimport { Link } from \"react-router-dom\";\n\nexport function LoginView(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //Declare hook for each input\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [passwordErr, setPasswordErr] = useState(\"\");\n\n  // validate user inputs\n  const validate = () => {\n    let isReq = true;\n    if (!username) {\n      setUsernameErr(\"Username Required\");\n      isReq = false;\n    } else if (username.length < 5) {\n      setUsernameErr(\"Username must be atleast 5 characters long\");\n      isReq = false;\n    }\n    if (!password) {\n      setPasswordErr(\"Password is required!\");\n      isReq = false;\n    } else if (password.length < 6) {\n      setPasswordErr(\"Password must contain atleast 6 characters\");\n      isReq = false;\n    }\n\n    return isReq;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isReq = validate();\n    if (isReq) {\n      /* Send a request to the server for authentication */\n      axios\n        .post(\"https://fredsflix.herokuapp.com/login\", {\n          Username: username,\n          Password: password,\n        })\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          props.setUser(data);\n        })\n        .catch((e) => {\n          console.log(e);\n          alert(\n            \"The provided username does not exist or the password was entered incorrectly.\"\n          );\n        });\n    }\n  };\n\n  return (\n    <>\n      <Container className=\"login_page\">\n        <Row>\n          <Col lg={12}>\n            <CardGroup>\n              <Card\n                Card\n                border=\"light\"\n                style={{ width: \"25rem\", marginTop: \"50px\" }}\n              >\n                <Card.Body className=\"login_container\">\n                  <Card.Title>\n                    <img src={horntrax} alt=\"logo\" />\n                  </Card.Title>\n                  <Card.Title>\n                    Please Login or{\" \"}\n                    <a href={`https://www.google.com`}>Register</a>\n                  </Card.Title>\n\n                  <Form>\n                    <Form.Group controlId=\"formUsername\">\n                      <Form.Label>Username:</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Enter a username\"\n                      />\n                      {usernameErr && (\n                        <p style={{ color: \"red\" }} className=\"font-italic\">\n                          {usernameErr}\n                        </p>\n                      )}\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formPassword\">\n                      <Form.Label>Password:</Form.Label>\n                      <Form.Control\n                        type=\"password\"\n                        onChange={(e) => setPassword(e.target.value)}\n                        placeholder=\"password\"\n                      />\n                      {passwordErr && (\n                        <p style={{ color: \"red\" }} className=\"font-italic\">\n                          {passwordErr}\n                        </p>\n                      )}\n                    </Form.Group>\n                    <Button\n                      className=\"button\"\n                      variant=\"info\"\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                    >\n                      Submit\n                    </Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </CardGroup>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n","/Users/fredpasqua/Desktop/client-loaners_project/src/registration-view.js",["48"],[],"import React, { useState } from \"react\";\nimport { Row, Col, Button, Form, Card, CardGroup } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./registration-view.css\";\n\nexport function RegistrationView() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  //Declare hook for each input\n  const [usernameErr, setUsernameErr] = useState(\"\");\n  const [passwordErr, setPasswordErr] = useState(\"\");\n  const [emailErr, setEmailErr] = useState(\"\");\n  //Declare variable for registration endpoint\n  const developmentEndpoint = \"http://localhost:3000/users/add\";\n  const validate = () => {\n    let isReq = true;\n    if (!username) {\n      setUsernameErr(\"Username Required\");\n      isReq = false;\n    } else if (username.length < 5) {\n      setUsernameErr(\"Username must be minimum 5 characters long.\");\n      isReq = false;\n    }\n    if (!password) {\n      setPasswordErr(\"Password Required\");\n      isReq = false;\n    } else if (password.length < 5) {\n      setPasswordErr(\"Password must be 5 characters long\");\n      isReq = false;\n    }\n    if (!email) {\n      setEmailErr(\"Email is required\");\n      isReq = false;\n    } else if (email.indexOf(\"@\") === -1) {\n      setEmailErr(\"Please enter a valid email\");\n      isReq = false;\n    }\n    return isReq;\n  };\n\n  const handleSubmit = (e) => {\n    let isReq;\n    e.preventDefault();\n    isReq = validate();\n    console.log(username, password, email);\n    if (isReq) {\n      /* Send a request to the server for authentication */\n      axios\n        .post(\"https://horntrax-api.herokuapp.com/users/add\", {\n          username: username,\n          password: password,\n          email: email,\n        })\n        .then((response) => {\n          const data = response.data;\n          console.log(data);\n          alert(\"User added successfully, please login!\");\n          //   window.open(\"/myflix-v2\", \"_self\");\n        })\n        .catch((response) => {\n          console.error(response);\n          alert(\"unable to register\");\n        });\n    }\n\n    // /* then call props.Registration(username) */\n    // props.onRegistration(username);\n  };\n\n  return (\n    <Row className=\"mt-5\">\n      <Col md={12}>\n        <CardGroup>\n          <Card Card border=\"light\" style={{ width: \"18rem\" }}>\n            <Card.Body className=\"register_container\">\n              <Form>\n                <h3>Sign Up</h3>\n                <p></p>\n                <Form.Group\n                  controlId=\"formUsername\"\n                  className=\"reg-form-inputs\"\n                >\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  {usernameErr && (\n                    <p style={{ color: \"red\" }} className=\"font-italic\">\n                      {usernameErr}\n                    </p>\n                  )}\n                </Form.Group>\n\n                <Form.Group\n                  controlId=\"formPassword\"\n                  className=\"reg-form-inputs\"\n                >\n                  <Form.Label>Password:</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  {passwordErr && (\n                    <p style={{ color: \"red\" }} className=\"font-italic\">\n                      {passwordErr}\n                    </p>\n                  )}\n                </Form.Group>\n\n                <Form.Group controlId=\"Email\" className=\"reg-form-inputs\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                  {emailErr && (\n                    <p style={{ color: \"red\" }} className=\"font-italic\">\n                      {emailErr}\n                    </p>\n                  )}\n                </Form.Group>\n                <Button variant=\"info\" type=\"submit\" onClick={handleSubmit}>\n                  Submit\n                </Button>\n                <p></p>\n              </Form>\n            </Card.Body>\n          </Card>\n        </CardGroup>\n      </Col>\n    </Row>\n  );\n}\n",{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":15},{"ruleId":"49","severity":1,"message":"53","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":26},{"ruleId":"49","severity":1,"message":"54","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":14},{"ruleId":"49","severity":1,"message":"55","line":16,"column":9,"nodeType":"51","messageId":"52","endLine":16,"endColumn":28},"no-unused-vars","'Audio' is defined but never used.","Identifier","unusedVar","'RegistrationView' is defined but never used.","'Link' is defined but never used.","'developmentEndpoint' is assigned a value but never used."]