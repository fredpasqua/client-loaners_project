[{"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/index.js":"1","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/App.js":"2","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/reportWebVitals.js":"3","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/registration-view.js":"4","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/instrumentList.js":"5","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/navbar.js":"6","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/select.js":"7","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/AddLoaner.js":"8","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/loginView.jsx":"9"},{"size":628,"mtime":1675618824999,"results":"10","hashOfConfig":"11"},{"size":547,"mtime":1675618929098,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1675618825000,"results":"13","hashOfConfig":"11"},{"size":4611,"mtime":1675618929099,"results":"14","hashOfConfig":"11"},{"size":10947,"mtime":1675620227935,"results":"15","hashOfConfig":"11"},{"size":1589,"mtime":1675618929099,"results":"16","hashOfConfig":"11"},{"size":1072,"mtime":1675618825001,"results":"17","hashOfConfig":"11"},{"size":3975,"mtime":1675620462847,"results":"18","hashOfConfig":"11"},{"size":4069,"mtime":1675618825000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dbpymt",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/index.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/App.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/reportWebVitals.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/registration-view.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/instrumentList.js",["49"],[],"import React, { useState, useEffect } from \"react\";\n\nimport axios from \"axios\";\nimport { Button, InputGroup, Form, Card } from \"react-bootstrap\";\nimport ReactModal from \"react-modal\";\nimport AddLoaner from \"./AddLoaner\";\nimport Alert from \"react-bootstrap/Alert\";\nimport DropDown from \"./select\";\nimport { LoginView } from \"./loginView\";\n\nimport Navigate from \"./navbar\";\n\n// import loaners from \"./instruments.js\";\n\nfunction InstrumentList() {\n  const [instruments, setInstruments] = useState([]);\n  const [user, setUser] = useState(\"\");\n  const [selectedInstrument, setSelectedInstrument] = useState({});\n  const [query, setQuery] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [selectedType, setSelectedType] = useState(\"\");\n  // const [selectedLocation, setSelectedLocation] = useState(\"\");\n\n  const [updater, setUpdater] = useState(0);\n  const [formData, setFormData] = useState({\n    type: \"\",\n    brand: \"\",\n    serial: \"\",\n    barcode: \"\",\n    location: \"\",\n    dateLastServiced: \"\",\n  });\n  const [deleteMessage, setDeleteMessage] = useState({\n    message: \"\",\n    show: false,\n  });\n  const onRequestClose = () => {\n    setShowModal(false);\n  };\n  const forceUpdate = () => {\n    setUpdater(updater + 1);\n  };\n\n  useEffect(() => {\n    async function getLoaners() {\n      await axios\n        .get(\n          `https://horntrax-api.herokuapp.com/loaners/useridfind/${user._id}`\n        )\n        .then((res) => setInstruments(res.data));\n    }\n    getLoaners();\n  }, [updater]);\n\n  //Drop Down Menu Calls this function to set state of SelecetedDepartments\n  const updateSelectedType = (e) => {\n    setSelectedType(e);\n  };\n  //creates a list of  instruments prefiltered by selectedDepartment state\n  let preFilteredInstruments = [];\n  selectedType.length > 0\n    ? (preFilteredInstruments = instruments.filter((instrument) => {\n        return instrument.type\n          .toLowerCase()\n          .includes(selectedType.toLowerCase());\n      }))\n    : (preFilteredInstruments = instruments);\n  let filteredInstruments = [];\n  query.length > 0\n    ? (filteredInstruments = preFilteredInstruments.filter((instrument) => {\n        return (\n          instrument.type.toLowerCase().includes(query.toLowerCase()) ||\n          instrument.brand.toLowerCase().includes(query.toLowerCase()) ||\n          instrument.serial.toLowerCase().includes(query.toLowerCase()) ||\n          instrument.location.toLowerCase().includes(query.toLowerCase()) ||\n          instrument.barcode.toString().includes(query)\n        );\n      }))\n    : (filteredInstruments = preFilteredInstruments);\n\n  const clear = (e) => {\n    setQuery(\"\");\n  };\n\n  const onLoggedOut = () => {\n    setUser(\"\");\n  };\n  async function deleteLoaner(key) {\n    await axios\n      .get(`https://horntrax-api.herokuapp.com/loaners/delete/${key}`)\n      .then((res) => setDeleteMessage({ message: res.data, show: true }))\n      .then((res) =>\n        setTimeout(() => {\n          setDeleteMessage({ message: \"\", show: false });\n          setShowModal(false);\n        }, 2000)\n      );\n\n    forceUpdate();\n  }\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n    console.log(formData);\n  };\n\n  const handleUpdateLoanerInfo = async (e, ID) => {\n    e.preventDefault();\n    try {\n      await axios.post(\n        `https://horntrax-api.herokuapp.com/loaners/update/${ID}`,\n        formData\n      );\n      setFormData({\n        type: \"\",\n        brand: \"\",\n        serial: \"\",\n        barcode: \"\",\n        location: \"\",\n      });\n      forceUpdate();\n      setShowModal(false);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <>\n      <Navigate onLoggedOut={onLoggedOut} user={user} />\n      {user.length === 0 ? (\n        <LoginView setUser={setUser} forceUpdate={forceUpdate} />\n      ) : (\n        <div className=\"loanersViewContainer\">\n          <div className=\"top-container\">\n            <div className=\"searchBar\">\n              <div className=\"searchBarAndButton\">\n                <input\n                  onChange={(event) => setQuery(event.target.value)}\n                  value={query}\n                  placeholder=\"search anything...\"\n                ></input>\n\n                <div className=\"clearButton\">\n                  <Button onClick={() => clear()}>Clear</Button>\n                </div>\n              </div>\n              <DropDown\n                data={instruments}\n                action={updateSelectedType}\n                selector={{ value: \"type\" }}\n              />\n            </div>\n            <AddLoaner forceUpdate={forceUpdate} user={user} />\n          </div>\n          <div className=\"cards-container\">\n            {filteredInstruments?.map((instrument) => (\n              <Card\n                style={{\n                  borderRadius: \"4px\",\n                  width: \"100vw\",\n                  textAlign: \"center\",\n                  justifyContent: \"center\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  marginTop: \"10px\",\n                }}\n                key={instrument._id}\n              >\n                <Card.Body>\n                  <Card.Title>\n                    <Button\n                      className=\"btn-instrument btn-primary\"\n                      onClick={() => {\n                        setShowModal(true);\n                        setSelectedInstrument(instrument);\n                        setFormData({\n                          type: instrument.type,\n                          brand: instrument.brand,\n                          serial: instrument.serial,\n                          barcode: instrument.barcode,\n                          location: instrument.location,\n                          dateLastServiced: instrument.dateLastServiced.slice(\n                            0,\n                            10\n                          ),\n                        });\n                      }}\n                    >\n                      {instrument.type}\n                    </Button>\n                  </Card.Title>\n\n                  <Card.Text className=\"cardText\">\n                    Brand: {instrument.brand}\n                    <br></br>\n                    Serial: {instrument.serial}\n                    <br></br>\n                    Location: {instrument.location}\n                    <br></br>\n                  </Card.Text>\n                </Card.Body>\n              </Card>\n            ))}\n          </div>\n        </div>\n      )}\n      <div className=\"reactModal\">\n        <ReactModal\n          isOpen={showModal}\n          ariaHideApp={false}\n          contentLabel=\"directory modal\"\n          shouldReturnFocusAfterClose={true}\n          onRequestClose={() => onRequestClose()}\n          shouldCloseOnOverlayClick={true}\n          style={{\n            overlay: {\n              backgroundColor: \"white\",\n              zIndex: 2,\n            },\n            content: {\n              backgroundColor: \"#71c7ec\",\n            },\n          }}\n        >\n          {deleteMessage.show ? (\n            <Alert\n              variant=\"danger\"\n              onClose={() => setDeleteMessage({ message: \"\", show: false })}\n            >\n              <Alert.Heading>{deleteMessage.message}</Alert.Heading>\n            </Alert>\n          ) : null}\n          <button\n            className=\"modalCloseButton\"\n            onClick={() => onRequestClose()}\n            style={{\n              height: \"40px\",\n              width: \"40px\",\n              color: \"#3794ca\",\n              marginLeft: \"92%\",\n            }}\n          >\n            X\n          </button>\n          <div>\n            <div className=\"useInfo\">\n              <h2 className=\"updateFormTitle\">Instrument: {formData.type}</h2>\n\n              <InputGroup className=\"modal-text\">\n                <Form.Label>Brand: </Form.Label>\n                <Form.Control\n                  style={{ width: \"100%\" }}\n                  type=\"text\"\n                  value={formData.brand}\n                  onChange={handleChange}\n                  name=\"brand\"\n                  placeholder={formData.brand}\n                  aria-label=\"Update Brand of Instrument\"\n                  aria-describedby=\"basic-addon2\"\n                ></Form.Control>\n                <br></br>\n                <Form.Label>Serial#:</Form.Label>\n                <Form.Control\n                  style={{ width: \"100%\" }}\n                  type=\"text\"\n                  value={formData.serial}\n                  name=\"serial\"\n                  placeholder={formData.serial}\n                  onChange={handleChange}\n                  aria-label=\"Update serial of Instrument\"\n                  aria-describedby=\"basic-addon2\"\n                ></Form.Control>{\" \"}\n                <Form.Label>Barcode: </Form.Label>\n                <Form.Control\n                  style={{ width: \"100%\" }}\n                  type=\"number\"\n                  value={formData.barcode}\n                  name=\"barcode\"\n                  placeholder={formData.barcode}\n                  onChange={handleChange}\n                  aria-label=\"Update barcode of Instrument\"\n                  aria-describedby=\"basic-addon2\"\n                ></Form.Control>{\" \"}\n                <Form.Label>Location: </Form.Label>\n                <Form.Control\n                  style={{ width: \"100%\" }}\n                  type=\"text\"\n                  value={formData.location}\n                  name=\"location\"\n                  placeholder={formData.location}\n                  onChange={handleChange}\n                  aria-label=\"Update location of Instrument\"\n                  aria-describedby=\"basic-addon2\"\n                ></Form.Control>\n                <Form.Label>Last serviced:</Form.Label>\n                <Form.Control\n                  style={{ width: \"100%\" }}\n                  type=\"date\"\n                  name=\"dateLastServiced\"\n                  placeholder={formData.dateLastServiced}\n                  value={formData.dateLastServiced}\n                  onChange={handleChange}\n                  aria-label=\"Update date of last service\"\n                  aria-describedby=\"basic-addon2\"\n                ></Form.Control>\n              </InputGroup>\n\n              <div className=\"updateFormButtonsContainer\">\n                <Button\n                  className=\"btn-loaner-update\"\n                  onClick={(e) =>\n                    handleUpdateLoanerInfo(e, selectedInstrument._id)\n                  }\n                >\n                  Update Information\n                </Button>\n                <Button\n                  className=\"deleteButton\"\n                  value={selectedInstrument._id}\n                  onClick={(e) => deleteLoaner(e.target.value)}\n                >\n                  Delete Instrument\n                </Button>\n              </div>\n            </div>\n          </div>\n        </ReactModal>\n      </div>\n    </>\n  );\n}\n\nexport default InstrumentList;\n","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/navbar.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/select.js",[],[],"/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/AddLoaner.js",["50"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./AddLoaner.css\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Accordion from \"react-bootstrap/Accordion\";\nconst AddLoaner = (props) => {\n \n  const [show, setShow] = useState(false);\n  const [show2, setShow2] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(props.user);\n  const [formData, setFormData] = useState({\n    type: \"\",\n    brand: \"\",\n    serial: \"\",\n    barcode: \"\",\n    location: \"\",\n    userid: user._id,\n  });\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n      userid: user._id,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post(\n        \"https://horntrax-api.herokuapp.com/loaners/add\",\n        formData\n      );\n      setMessage(\"Instrument addeded Succesfully!\");\n      setShow2(true);\n      setTimeout(() => {\n        setShow2(false);\n      }, 2000);\n      setFormData({\n        type: \"\",\n        brand: \"\",\n        serial: \"\",\n        barcode: \"\",\n        location: \"\",\n        userid: user._id,\n      });\n      props.forceUpdate();\n    } catch (error) {\n      console.error(error);\n      setShow(true);\n      setMessage(error.response.data);\n    }\n  };\n\n  return (\n    <>\n      <Accordion className=\"accordion\">\n        <Accordion.Item eventKey=\"0\">\n          <Accordion.Header>ADD AN INSTRUMENT</Accordion.Header>\n          <Accordion.Body>\n            {show ? (\n              <Alert\n                variant=\"danger\"\n                onClose={() => setShow(false) && setMessage(\"\")}\n                dismissible\n              >\n                <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n                <p>{message}</p>\n              </Alert>\n            ) : null}\n            {show2 ? (\n              <Alert\n                variant=\"primary\"\n                onClose={() => setShow2(false) && setMessage(\"\")}\n                dismissible\n              >\n                <Alert.Heading>{message}</Alert.Heading>\n              </Alert>\n            ) : null}\n\n            <form className=\"loaner-form\" onSubmit={handleSubmit}>\n              <label>\n                Instrument:\n                <input\n                  className=\"loaner-input\"\n                  type=\"text\"\n                  name=\"type\"\n                  value={formData.type}\n                  onChange={handleChange}\n                />\n              </label>\n              <label>\n                Brand:\n                <input\n                  className=\"loaner-input\"\n                  type=\"text\"\n                  name=\"brand\"\n                  value={formData.brand}\n                  onChange={handleChange}\n                />\n              </label>\n              <label>\n                Serial:\n                <input\n                  className=\"loaner-input\"\n                  type=\"text\"\n                  name=\"serial\"\n                  value={formData.serial}\n                  onChange={handleChange}\n                />\n              </label>\n              <label>\n                Barcode:\n                <input\n                  className=\"loaner-input\"\n                  type=\"number\"\n                  name=\"barcode\"\n                  value={formData.barcode}\n                  onChange={handleChange}\n                />\n              </label>\n              <label>\n                Location:\n                <input\n                  className=\"loaner-input\"\n                  type=\"text\"\n                  name=\"location\"\n                  value={formData.location}\n                  onChange={handleChange}\n                />\n              </label>\n              <button className=\"loaner-submit\" type=\"submit\">\n                Add Instrument\n              </button>\n            </form>\n          </Accordion.Body>\n        </Accordion.Item>\n      </Accordion>\n    </>\n  );\n};\n\nexport default AddLoaner;\n","/Users/fredpasqua/Desktop/Horntrax/client-loaners_project-1/src/loginView.jsx",[],[],{"ruleId":"51","severity":1,"message":"52","line":53,"column":6,"nodeType":"53","endLine":53,"endColumn":15,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":11,"column":16,"nodeType":"57","messageId":"58","endLine":11,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.","ArrayExpression",["59"],"no-unused-vars","'setUser' is assigned a value but never used.","Identifier","unusedVar",{"desc":"60","fix":"61"},"Update the dependencies array to be: [updater, user._id]",{"range":"62","text":"63"},[1504,1513],"[updater, user._id]"]